(load "ex2.10.scm")

(define (mul-interval x y)
  (let ((lx (lower-bound x))
        (ux (upper-bound x))
        (ly (lower-bound y))
        (uy (upper-bound y)))
    (cond ((and (<= 0 lx ux) (<= 0 ly uy))
           (make-interval (* lx ly) (* ux uy)))
          ((and (<= 0 lx ux) (<= ly 0 uy))
           (make-interval (* ux ly) (* ux uy)))
          ((and (<= 0 lx ux) (<= ly uy 0))
           (make-interval (* ux ly) (* lx uy)))
          ((and (<= lx 0 ux) (<= 0 ly uy))
           (make-interval (* lx uy) (* ux uy)))
          ((and (<= lx 0 ux) (<= ly 0 uy))
           (make-interval (min (* lx uy) (* ly ux))
                          (max (* lx ly) (* ux uy))))
          ((and (<= lx 0 ux) (<= ly uy 0))
           (make-interval (* ux ly) (* lx ly)))
          ((and (<= lx ux 0) (<= 0 ly uy))
           (make-interval (* lx uy) (* ux ly)))
          ((and (<= lx ux 0) (<= ly 0 uy))
           (make-interval (* lx uy) (* lx ly)))
          ((and (<= lx ux 0) (<= ly uy 0))
           (make-interval (* ux uy) (* lx ly))))))
